Install docker desktop on Windows
Enable Hyper-v with Activate/Deactivate windows features
Install wsl with wsl --install 
	We can add --web-download, and then --update --web-download if we get errors

After installing docker:
Download mysql image from dockerhub
Create the docker network "docker network create ecommerce"
Use "docker run --name bdmysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -p 2012:3306 --network ecommerce -d mysql"

Then in Apache Netbeans:
- Change the application.properties to generate an image pointing to the nam of the mysql container
"spring.datasource.url=jdbc:mysql://bdmysql:3306/ApiCustomer?createDatabaseIfNotExist=true"
- In Tools>Options>Java>Maven check the Skip Tests option and build our project
- Create our dockerfile
- Go to the directory where i have the Dockerfile
- Create the image "docker build -t apicustomer ."
- Run the image "docker run --name apicustomer -p 8280:8080 --network ecommerce -d apicustomer"

We need also to create a ConfigServer, where we centralize all the application.properties, so when we update it
we dont need to stop all the containers but they are notified and we can have a "hot-fix"

To create this ConfigServer we create a new project in NetBeans and add some dependencies:
	- Spring Boot Actuator -> for healthcheck
	- Config Server

Nota, creando el contenedor de configserver como hicimos anteriormente, ese nombre del contenedor nos va a servir
para que nuestros otros contenedores apunten a los archivos de configuracion.

Trabajo: Las 4 apis deben conectarse al config server y se lo pasamos por un drive.
Estamos con spring boot 3 para la union de application.properties